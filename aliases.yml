#'dumb' parameter, will just use what you put in
banhammer:
    1: /ban !1
#name parameter is replaced with the command users name
gmon: 
    0: /gamemode creative !name
    1: /gamemode creative !1
gmoff: 
    0: /gamemode survival !name
    1: /gamemode survival !1
# putting a P after the parameter specifies this is a player, and BA should try to guess which player
# useful for things like "/to e0n" instead of "/to Ne0nx3r0"
# This will ONLY look for players that are online
to:
    1: /tp !name !1p
    2: /tp !1p !2p 
bring:
    1: /tp !1p !name 
# multiple command example
tpthenkick: 
    1: 
      - /tp !1p !name
      - /kick !1p

# replaced with the item name in the player's hand
hand: 
  0: I have a !handItemName in my hand right now!
  
# replace with the item ID in the player's hand
handid:
  0: /give !name !handItemID

# Toggle the current player's game mode from survival to creative
gm:
  0: /gamemode !oppositeGameMode !name

# Send everything with a command
sendAll:
  "*": /say !*
  
# Send everything with a command, but only on certain parameter lengths
sendAll:
  3: /say !*

# Color example
# ----------------
# Available colors:
# BLACK, DARK_BLUE, DARK_GREEN, DARK_AQUA, DARK_RED, DARK_PURPLE, GOLD, GRAY, 
# DARK_GRAY, BLUE, GREEN, AQUA, RED, LIGHT_PURPLE, YELLOW, WHITE, MAGIC, BOLD, 
# STRIKETHROUGH, UNDERLINE, ITALIC, RESET
#
# (Also shows how to use the reply modifier to only reply to the player)
redText:
  0: reply Look at my &REDcolored &DARK_GREENtext!
  
# User must have betteralias.staff permission or be the console.
staff:
  permission: staff
  0:
    - /seen Ne0nx3r0
    - /seen someOtherStaffMember
    - /seen someThirdStaffMember
  
# Console example
# If this seems dangerous, that's because it is!
#
# Required permission will be betteralias.your.node
makeop:
  permission: your.node 
# Quotes are required because 0 uses a colon (:)
  0: "reply Usage: /makeop <username>"
  1:
    - console /say !1 has been opped!
    - console /op !1
    - /me has opped !1
  2: console /say testing single line
  3: reply testing single line
  
# Wait example
wait:
# Quotes are required because 0 uses a colon (:)
  0:
    - wait 80 /me thinks this message will come third
    - wait 40 /me thinks this message will come second
    - /me thinks this message will come first  
    
# wait then reply example
waitreply:
# Quotes are required because 0 uses a colon (:)
  0:
    - wait 80 reply this came third!
    - wait 40 reply this came second!
    - reply this came first! 
    
# Wait then console example
waitconsole:
# Quotes are required because 0 uses a colon (:)
  0:
    - wait 40 console /say this message was delayed!
    - wait 80 console /say this message was delayed longer!
    - console /say this message came first!